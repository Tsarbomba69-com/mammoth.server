basePath: /
definitions:
  schemas.DBConnectionRequest:
    properties:
      dbname:
        type: string
      host:
        type: string
      password:
        type: string
      port:
        type: integer
      user:
        type: string
    required:
    - dbname
    - host
    - password
    - port
    - user
    type: object
  schemas.DBConnectionResponse:
    properties:
      created_at:
        type: string
      dbname:
        type: string
      host:
        type: string
      id:
        type: integer
      port:
        type: integer
      updated_at:
        type: string
      user:
        type: string
    type: object
  schemas.PageResponse-schemas_ProjectResponse:
    properties:
      entries:
        items:
          $ref: '#/definitions/schemas.ProjectResponse'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  schemas.ProjectRequest:
    properties:
      description:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/schemas.DBConnectionRequest'
      target:
        $ref: '#/definitions/schemas.DBConnectionRequest'
    required:
    - name
    - source
    - target
    type: object
  schemas.ProjectResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      source:
        $ref: '#/definitions/schemas.DBConnectionResponse'
      target:
        $ref: '#/definitions/schemas.DBConnectionResponse'
      updated_at:
        type: string
    type: object
  schemas.SchemaComparisonResponse:
    properties:
      differences:
        $ref: '#/definitions/services.SchemaDiff'
      migration_script:
        $ref: '#/definitions/services.MigrationScript'
    type: object
  services.ColumnChange:
    properties:
      changed_attributes:
        items:
          type: string
        type: array
      name:
        type: string
      source:
        $ref: '#/definitions/services.ColumnInfo'
      target:
        $ref: '#/definitions/services.ColumnInfo'
    type: object
  services.ColumnInfo:
    properties:
      data_type:
        type: string
      default:
        type: string
      is_nullable:
        type: boolean
      is_primary:
        type: boolean
      name:
        type: string
    type: object
  services.ForeignKeyInfo:
    properties:
      columns:
        items:
          type: string
        type: array
      name:
        type: string
      onDelete:
        type: string
      onUpdate:
        type: string
      referencedColumns:
        items:
          type: string
        type: array
      referencedTable:
        type: string
    type: object
  services.IndexChange:
    properties:
      changed_attributes:
        items:
          type: string
        type: array
      name:
        type: string
      source:
        $ref: '#/definitions/services.IndexInfo'
      target:
        $ref: '#/definitions/services.IndexInfo'
    type: object
  services.IndexInfo:
    properties:
      columns:
        items:
          type: string
        type: array
      is_primary:
        type: boolean
      is_unique:
        type: boolean
      name:
        type: string
    type: object
  services.MigrationScript:
    properties:
      down:
        description: SQL for reverting changes
        type: string
      up:
        description: SQL for applying changes
        type: string
    type: object
  services.SchemaDiff:
    properties:
      summary:
        additionalProperties:
          type: integer
        type: object
      tables_added:
        items:
          $ref: '#/definitions/services.TableDiff'
        type: array
      tables_modified:
        items:
          $ref: '#/definitions/services.TableDiff'
        type: array
      tables_removed:
        items:
          $ref: '#/definitions/services.TableDiff'
        type: array
      tables_same:
        items:
          type: string
        type: array
    type: object
  services.TableDiff:
    properties:
      columns_added:
        items:
          $ref: '#/definitions/services.ColumnInfo'
        type: array
      columns_modified:
        items:
          $ref: '#/definitions/services.ColumnChange'
        type: array
      columns_removed:
        items:
          $ref: '#/definitions/services.ColumnInfo'
        type: array
      columns_same:
        items:
          $ref: '#/definitions/services.ColumnInfo'
        type: array
      foreign_key_info_added:
        items:
          $ref: '#/definitions/services.ForeignKeyInfo'
        type: array
      foreign_key_info_modified:
        items:
          $ref: '#/definitions/services.ForeignKeyInfo'
        type: array
      indexes_added:
        items:
          $ref: '#/definitions/services.IndexInfo'
        type: array
      indexes_modified:
        items:
          $ref: '#/definitions/services.IndexChange'
        type: array
      indexes_removed:
        items:
          $ref: '#/definitions/services.IndexInfo'
        type: array
      indexes_same:
        items:
          $ref: '#/definitions/services.IndexInfo'
        type: array
      table_name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a database (PostgreSQL) schema comparsion and migration.
  title: Mammoth Server API
  version: "1.0"
paths:
  /api/v1/projects:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of projects with their database connections
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10, max: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.PageResponse-schemas_ProjectResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: List all projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project with name and description
      parameters:
      - description: Project JSON
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/schemas.ProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create a project
      tags:
      - projects
  /api/v1/projects/{id}/compare:
    post:
      consumes:
      - application/json
      description: initiates schema comparison from the source database to the target
        database for the specified project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SchemaComparisonResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Compare database
      tags:
      - projects
swagger: "2.0"
