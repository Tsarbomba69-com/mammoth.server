name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GO_VERSION: 1.24
  DOCKER_IMAGE_NAME: mammoth/mammoth.server
  DOCKER_TAG: latest

jobs:
  test-and-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: go.sum

      - name: Get dependencies
        run: go mod download

      - name: Run tests with coverage
        run: |
          go test -coverprofile=coverage.out -covermode=atomic -race -v ./...
          go tool cover -func=coverage.out

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.out

      - name: Generate HTML coverage report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html-report
          path: coverage.html

      - name: Run golangci-lint
        run: |
          # Install golangci-lint
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          golangci-lint run --timeout 5m -v

      - name: Run vet
        run: go vet ./...

      - name: Run staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...
  # Uncomment the following section to enable Docker image build and push
  #   build:
  #     name: Build Docker Image
  #     needs: test-and-lint
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: Checkout code
  #         uses: actions/checkout@v4

  #       - name: Set up QEMU
  #         uses: docker/setup-qemu-action@v3

  #       - name: Set up Docker Buildx
  #         uses: docker/setup-buildx-action@v3

  #       - name: Login to Docker Hub
  #         if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
  #         uses: docker/login-action@v3
  #         with:
  #           username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #           password: ${{ secrets.DOCKER_HUB_TOKEN }}

  #       - name: Build and push Docker image
  #         uses: docker/build-push-action@v5
  #         with:
  #           context: .
  #           push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
  #           tags: |
  #             ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}
  #             ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
  #           cache-from: type=gha
  #           cache-to: type=gha,mode=max

  coverage:
    name: Coverage Report
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
